import React, { useEffect } from 'react';
import { Alert } from 'react-native';
import { collection, getDocs } from 'firebase/firestore';
import * as Notifications from 'expo-notifications';
import { db } from '../database/firebase';

Notifications.setNotificationHandler({
  handleNotification: async () => ({
    shouldShowAlert: true,
    shouldPlaySound: true,
    shouldSetBadge: false,
  }),
});

const BirthdayNotification = () => {
  useEffect(() => {
    // Solicitar permisos de notificaciÃ³n
    const requestNotificationPermission = async () => {
      const { status } = await Notifications.requestPermissionsAsync();
      if (status !== 'granted') {
        Alert.alert('Permiso denegado', 'Necesitas permitir las notificaciones para recibir alertas de cumpleaÃ±os.');
      }
    };

    requestNotificationPermission();

    // Verificar los cumpleaÃ±os
    const checkBirthdays = async () => {
      try {
        const today = new Date();
        const formattedToday = `${today.getDate().toString().padStart(2, '0')}/${(today.getMonth() + 1)
          .toString()
          .padStart(2, '0')}`;

        const usersRef = collection(db, 'people'); // AsegÃºrate de que el path sea correcto.
        const querySnapshot = await getDocs(usersRef);

        querySnapshot.forEach((doc) => {
          const userData = doc.data();
          const userBirthday = userData.birthDay; // Obtenemos la fecha de cumpleaÃ±os del usuario
          
          // Extraemos el dÃ­a y el mes de la fecha de cumpleaÃ±os
          const [userDay, userMonth] = userBirthday.split('/');

          // Comparamos solo el dÃ­a y el mes
          if (`${userDay.padStart(2, '0')}/${userMonth.padStart(2, '0')}` === formattedToday) {
            Alert.alert('ðŸŽ‚ Â¡Feliz CumpleaÃ±os!', `Hoy es el cumpleaÃ±os de ${userData.name}! ðŸŽ‰`);
            sendBirthdayNotification(userData.name);
          }
        });
      } catch (error) {
        console.error('Error al verificar cumpleaÃ±os:', error);
      }
    };

    checkBirthdays();
  }, []);

  const sendBirthdayNotification = async (name) => {
    await Notifications.scheduleNotificationAsync({
      content: {
        title: 'ðŸŽ‚ Â¡Feliz CumpleaÃ±os!',
        body: `Hoy es el cumpleaÃ±os de ${name}! ðŸŽ‰`,
        sound: true,
      },
      trigger: null, // Se ejecuta inmediatamente.
    });
  };

  return null;
};

export default BirthdayNotification;
